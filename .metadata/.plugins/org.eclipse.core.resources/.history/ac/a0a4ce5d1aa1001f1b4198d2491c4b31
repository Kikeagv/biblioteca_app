package com.biblioteca.dao;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;

import com.biblioteca.conexion.ConexionBD;

public class PrestamoDAO {

    public boolean tieneMora(String username) {
        String sql = "SELECT mora FROM prestamos WHERE username = ? AND devuelto = false";
        try (Connection con = ConexionBD.conectar();
             PreparedStatement ps = con.prepareStatement(sql)) {
            ps.setString(1, username);
            try (ResultSet rs = ps.executeQuery()) {
                if (rs.next()) {
                    return rs.getDouble("mora") > 0;
                }
            }
        } catch (SQLException e) {
            e.printStackTrace();
        }
        return false;
    }

    public void registrarPrestamo(String username, int ejemplarId) {
        String sql = "INSERT INTO prestamos (username, ejemplar_id, fecha_prestamo) VALUES (?, ?, NOW())";
        try (Connection con = ConexionBD.conectar();
             PreparedStatement ps = con.prepareStatement(sql)) {
            ps.setString(1, username);
            ps.setInt(2, ejemplarId);
            ps.executeUpdate();
            System.out.println("Préstamo registrado correctamente.");
        } catch (SQLException e) {
            e.printStackTrace();
        }
    }

    public void registrarDevolucion(int prestamoId) {
        String sql = "UPDATE prestamos SET devuelto = true, fecha_devolucion = NOW() WHERE id = ?";
        try (Connection con = ConexionBD.conectar();
             PreparedStatement ps = con.prepareStatement(sql)) {
            ps.setInt(1, prestamoId);
            ps.executeUpdate();
            System.out.println("Devolución registrada correctamente.");
        } catch (SQLException e) {
            e.printStackTrace();
        }
    }

    public double calcularMora(int prestamoId, double tasaDiaria) {
        String sql = "SELECT DATEDIFF(NOW(), fecha_prestamo) AS dias FROM prestamos WHERE id = ?";
        try (Connection con = ConexionBD.conectar();
             PreparedStatement ps = con.prepareStatement(sql)) {
            ps.setInt(1, prestamoId);
            try (ResultSet rs = ps.executeQuery()) {
                if (rs.next()) {
                    int dias = rs.getInt("dias");
                    return dias > 0 ? dias * tasaDiaria : 0;
                }
            }
        } catch (SQLException e) {
            e.printStackTrace();
        }
        return 0;
    }
}
