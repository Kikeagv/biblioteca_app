package com.biblioteca.ui;

import com.biblioteca.dao.EjemplarDAO;

import javax.swing.*;
import java.awt.*;
import java.util.HashMap;
import java.util.Map;

public class AgregarMaterialUI {
    private EjemplarDAO ejemplarDAO = new EjemplarDAO();
    private Map<String, JTextField> camposEspecificos = new HashMap<>();

    public void mostrarVentana() {
        JFrame frame = new JFrame("Agregar Nuevo Material");
        frame.setSize(600, 700);
        frame.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
        frame.setLayout(null);

        JLabel lblTipo = new JLabel("Tipo de Material:");
        lblTipo.setBounds(20, 20, 150, 25);
        frame.add(lblTipo);

        String[] tiposMaterial = {"Libro", "Revista", "Tesis", "CD", "DVD"};
        JComboBox<String> comboTipo = new JComboBox<>(tiposMaterial);
        comboTipo.setBounds(180, 20, 200, 25);
        frame.add(comboTipo);

        JLabel lblTitulo = new JLabel("Título:");
        lblTitulo.setBounds(20, 60, 150, 25);
        frame.add(lblTitulo);

        JTextField txtTitulo = new JTextField();
        txtTitulo.setBounds(180, 60, 200, 25);
        frame.add(txtTitulo);

        JLabel lblCodigoInterno = new JLabel("Código Interno:");
        lblCodigoInterno.setBounds(20, 100, 150, 25);
        frame.add(lblCodigoInterno);

        JTextField txtCodigoInterno = new JTextField();
        txtCodigoInterno.setBounds(180, 100, 200, 25);
        frame.add(txtCodigoInterno);

        JLabel lblCantidad = new JLabel("Cantidad:");
        lblCantidad.setBounds(20, 140, 150, 25);
        frame.add(lblCantidad);

        JTextField txtCantidad = new JTextField();
        txtCantidad.setBounds(180, 140, 200, 25);
        frame.add(txtCantidad);

        JLabel lblUbicacion = new JLabel("Ubicación:");
        lblUbicacion.setBounds(20, 180, 150, 25);
        frame.add(lblUbicacion);

        JTextField txtUbicacion = new JTextField();
        txtUbicacion.setBounds(180, 180, 200, 25);
        frame.add(txtUbicacion);

        JLabel lblDetalles = new JLabel("Detalles Específicos:");
        lblDetalles.setBounds(20, 220, 200, 25);
        frame.add(lblDetalles);

        JPanel panelDetalles = new JPanel(new GridLayout(5, 2, 10, 10));
        panelDetalles.setBounds(20, 260, 540, 150);
        frame.add(panelDetalles);

        JButton btnGuardar = new JButton("Guardar");
        btnGuardar.setBounds(150, 450, 100, 30);
        estilizarBoton(btnGuardar, new Color(76, 175, 80), Color.WHITE);
        frame.add(btnGuardar);

        JButton btnCancelar = new JButton("Cancelar");
        btnCancelar.setBounds(270, 450, 100, 30);
        estilizarBoton(btnCancelar, new Color(244, 67, 54), Color.WHITE);
        frame.add(btnCancelar);

        // Evento para cambiar los campos específicos según el tipo de material
        comboTipo.addActionListener(e -> {
            panelDetalles.removeAll();
            camposEspecificos.clear();
            String tipoSeleccionado = (String) comboTipo.getSelectedItem();
            switch (tipoSeleccionado) {
                case "Libro" -> agregarCamposLibro(panelDetalles);
                case "Revista" -> agregarCamposRevista(panelDetalles);
                case "Tesis" -> agregarCamposTesis(panelDetalles);
                case "CD" -> agregarCamposCD(panelDetalles);
                case "DVD" -> agregarCamposDVD(panelDetalles);
            }
            panelDetalles.revalidate();
            panelDetalles.repaint();
        });

        // Evento Guardar
        btnGuardar.addActionListener(e -> {
            try {
                String tipoMaterial = (String) comboTipo.getSelectedItem();
                String titulo = txtTitulo.getText();
                String codigoInterno = txtCodigoInterno.getText();
                int cantidad = Integer.parseInt(txtCantidad.getText());
                String ubicacion = txtUbicacion.getText();

                Map<String, String> detallesEspecificos = new HashMap<>();
                for (Map.Entry<String, JTextField> entry : camposEspecificos.entrySet()) {
                    detallesEspecificos.put(entry.getKey(), entry.getValue().getText());
                }

                ejemplarDAO.registrarEjemplarConDetalles(tipoMaterial, titulo, codigoInterno, cantidad, ubicacion, detallesEspecificos);
                JOptionPane.showMessageDialog(frame, "Material registrado correctamente.");
                frame.dispose();
            } catch (NumberFormatException ex) {
                JOptionPane.showMessageDialog(frame, "Por favor, ingrese valores válidos.", "Error", JOptionPane.ERROR_MESSAGE);
            }
        });

        btnCancelar.addActionListener(e -> frame.dispose());

        frame.setLocationRelativeTo(null);
        frame.setVisible(true);
    }

    private void agregarCamposLibro(JPanel panel) {
        agregarCampoEspecifico(panel, "Autor");
        agregarCampoEspecifico(panel, "Editorial");
        agregarCampoEspecifico(panel, "ISBN");
        agregarCampoEspecifico(panel, "Número de Páginas");
        agregarCampoEspecifico(panel, "Género");
        agregarCampoEspecifico(panel, "Año de Publicación");
    }

    private void agregarCamposRevista(JPanel panel) {
        agregarCampoEspecifico(panel, "Editorial");
        agregarCampoEspecifico(panel, "Periodicidad");
        agregarCampoEspecifico(panel, "Fecha de Publicación");
    }

    private void agregarCamposTesis(JPanel panel) {
        agregarCampoEspecifico(panel, "Autor");
        agregarCampoEspecifico(panel, "Título de Investigación");
        agregarCampoEspecifico(panel, "Carrera");
        agregarCampoEspecifico(panel, "Universidad");
        agregarCampoEspecifico(panel, "Año de Presentación");
    }

    private void agregarCamposCD(JPanel panel) {
        agregarCampoEspecifico(panel, "Artista");
        agregarCampoEspecifico(panel, "Género");
        agregarCampoEspecifico(panel, "Duración");
        agregarCampoEspecifico(panel, "Número de Canciones");
    }

    private void agregarCamposDVD(JPanel panel) {
        agregarCampoEspecifico(panel, "Director");
        agregarCampoEspecifico(panel, "Género");
        agregarCampoEspecifico(panel, "Duración");
    }

    private void agregarCampoEspecifico(JPanel panel, String nombreCampo) {
        JLabel label = new JLabel(nombreCampo + ":");
        JTextField textField = new JTextField();
        panel.add(label);
        panel.add(textField);
        camposEspecificos.put(nombreCampo, textField);
    }

    private void estilizarBoton(JButton boton, Color bgColor, Color fgColor) {
        boton.setBackground(bgColor);
        boton.setForeground(fgColor);
        boton.setFocusPainted(false);
        boton.setFont(new Font("SansSerif", Font.BOLD, 14));
    }
}
