package com.biblioteca.ui;

import com.biblioteca.dao.EjemplarDAO;

import javax.swing.*;
import java.awt.*;
import java.util.HashMap;
import java.util.Map;

public class AgregarMaterialUI {
    private EjemplarDAO ejemplarDAO = new EjemplarDAO();

    public void mostrarVentana() {
        JFrame frame = new JFrame("Agregar Nuevo Material");
        frame.setSize(700, 600);
        frame.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
        frame.setLayout(new BorderLayout());
        frame.setResizable(false);

        // Título
        JLabel titulo = new JLabel("Agregar Nuevo Material", SwingConstants.CENTER);
        titulo.setFont(new Font("SansSerif", Font.BOLD, 22));
        titulo.setBorder(BorderFactory.createEmptyBorder(20, 0, 20, 0));
        frame.add(titulo, BorderLayout.NORTH);

        // Panel del formulario principal
        JPanel panelFormulario = new JPanel();
        panelFormulario.setLayout(new BoxLayout(panelFormulario, BoxLayout.Y_AXIS));
        panelFormulario.setBorder(BorderFactory.createEmptyBorder(20, 50, 20, 50));

        // Campo de selección del tipo de material
        JPanel panelTipo = new JPanel(new FlowLayout(FlowLayout.LEFT));
        JLabel lblTipo = new JLabel("Tipo de Material:");
        lblTipo.setFont(new Font("SansSerif", Font.PLAIN, 16));
        JComboBox<String> comboTipo = new JComboBox<>(new String[]{"Libro", "Revista", "Tesis", "CD", "DVD"});
        comboTipo.setFont(new Font("SansSerif", Font.PLAIN, 16));
        panelTipo.add(lblTipo);
        panelTipo.add(comboTipo);
        panelFormulario.add(panelTipo);

        // Campos generales
        JTextField txtTitulo = new JTextField();
        JTextField txtCodigoInterno = new JTextField();
        JTextField txtCantidad = new JTextField();
        JTextField txtUbicacion = new JTextField();

        JPanel panelCamposGenerales = crearCamposGenerales(txtTitulo, txtCodigoInterno, txtCantidad, txtUbicacion);
        panelFormulario.add(panelCamposGenerales);

        // Panel para campos específicos
        JPanel panelCamposEspecificos = new JPanel();
        panelCamposEspecificos.setLayout(new BoxLayout(panelCamposEspecificos, BoxLayout.Y_AXIS));
        panelCamposEspecificos.setBorder(BorderFactory.createTitledBorder("Detalles Específicos"));
        panelFormulario.add(panelCamposEspecificos);

        // Actualizar campos específicos según el tipo seleccionado
        comboTipo.addActionListener(e -> {
            panelCamposEspecificos.removeAll();
            camposEspecificos.clear(); // Limpia campos anteriores

            String tipoSeleccionado = (String) comboTipo.getSelectedItem();
            switch (tipoSeleccionado) {
                case "Libro":
                    agregarCamposLibro(panelCamposEspecificos);
                    break;
                case "Revista":
                    agregarCamposRevista(panelCamposEspecificos);
                    break;
                case "Tesis":
                    agregarCamposTesis(panelCamposEspecificos);
                    break;
                case "CD":
                    agregarCamposCD(panelCamposEspecificos);
                    break;
                case "DVD":
                    agregarCamposDVD(panelCamposEspecificos);
                    break;
            }

            panelCamposEspecificos.revalidate();
            panelCamposEspecificos.repaint();
        });

        frame.add(panelFormulario, BorderLayout.CENTER);

        // Panel de botones
        JPanel panelBotones = new JPanel(new FlowLayout(FlowLayout.CENTER, 20, 10));
        JButton btnGuardar = new JButton("Guardar");
        JButton btnCancelar = new JButton("Cancelar");

        estilizarBoton(btnGuardar, new Color(40, 167, 69), Color.WHITE);
        estilizarBoton(btnCancelar, new Color(220, 53, 69), Color.WHITE);

        panelBotones.add(btnGuardar);
        panelBotones.add(btnCancelar);
        frame.add(panelBotones, BorderLayout.SOUTH);

        // Evento Guardar
        btnGuardar.addActionListener(e -> {
            try {
                String tipoMaterial = (String) comboTipo.getSelectedItem();
                String tituloMaterial = txtTitulo.getText(); // Cambio de nombre
                String codigoInterno = txtCodigoInterno.getText();
                int cantidadMaterial = Integer.parseInt(txtCantidad.getText());
                String ubicacionMaterial = txtUbicacion.getText();

                Map<String, String> detallesEspecificos = new HashMap<>();
                for (Map.Entry<String, JTextField> entry : camposEspecificos.entrySet()) {
                    detallesEspecificos.put(entry.getKey(), entry.getValue().getText());
                }

                ejemplarDAO.registrarEjemplarConDetalles(tipoMaterial, tituloMaterial, codigoInterno, cantidadMaterial, ubicacionMaterial, detallesEspecificos);
                JOptionPane.showMessageDialog(frame, "Material registrado correctamente.");
                frame.dispose();
            } catch (NumberFormatException ex) {
                JOptionPane.showMessageDialog(frame, "Por favor, ingrese un valor numérico válido para la cantidad.", "Error", JOptionPane.ERROR_MESSAGE);
            }
        });


        btnCancelar.addActionListener(e -> frame.dispose());

        frame.setLocationRelativeTo(null);
        frame.setVisible(true);
    }

    private JPanel crearCamposGenerales(JTextField txtTitulo, JTextField txtCodigoInterno, JTextField txtCantidad, JTextField txtUbicacion) {
        JPanel panel = new JPanel(new GridLayout(4, 2, 10, 10));

        panel.add(new JLabel("Título:", SwingConstants.RIGHT));
        panel.add(txtTitulo);

        panel.add(new JLabel("Código Interno:", SwingConstants.RIGHT));
        panel.add(txtCodigoInterno);

        panel.add(new JLabel("Cantidad:", SwingConstants.RIGHT));
        panel.add(txtCantidad);

        panel.add(new JLabel("Ubicación:", SwingConstants.RIGHT));
        panel.add(txtUbicacion);

        return panel;
    }

    private void agregarCamposLibro(JPanel panel) {
        agregarCampoEspecifico(panel, "Autor");
        agregarCampoEspecifico(panel, "Editorial");
        agregarCampoEspecifico(panel, "ISBN");
        agregarCampoEspecifico(panel, "Número de Páginas");
    }

    private void agregarCamposRevista(JPanel panel) {
        agregarCampoEspecifico(panel, "Editorial");
        agregarCampoEspecifico(panel, "Periodicidad");
        agregarCampoEspecifico(panel, "Fecha de Publicación");
    }

    private void agregarCamposTesis(JPanel panel) {
        agregarCampoEspecifico(panel, "Autor");
        agregarCampoEspecifico(panel, "Título de Investigación");
        agregarCampoEspecifico(panel, "Carrera");
        agregarCampoEspecifico(panel, "Universidad");
        agregarCampoEspecifico(panel, "Año de Presentación");
    }

    private void agregarCamposCD(JPanel panel) {
        agregarCampoEspecifico(panel, "Artista");
        agregarCampoEspecifico(panel, "Género");
        agregarCampoEspecifico(panel, "Duración");
        agregarCampoEspecifico(panel, "Número de Canciones");
    }

    private void agregarCamposDVD(JPanel panel) {
        agregarCampoEspecifico(panel, "Director");
        agregarCampoEspecifico(panel, "Género");
        agregarCampoEspecifico(panel, "Duración");
    }

    private void agregarCampoEspecifico(JPanel panel, String nombreCampo) {
        JLabel label = new JLabel(nombreCampo + ":");
        JTextField textField = new JTextField();
        panel.add(label);
        panel.add(textField);
        camposEspecificos.put(nombreCampo, textField);
    }

    private void estilizarBoton(JButton boton, Color bgColor, Color fgColor) {
        boton.setBackground(bgColor);
        boton.setForeground(fgColor);
        boton.setFocusPainted(false);
        boton.setFont(new Font("SansSerif", Font.BOLD, 14));
        boton.setBorder(BorderFactory.createCompoundBorder(
                BorderFactory.createLineBorder(bgColor.darker(), 1),
                BorderFactory.createEmptyBorder(10, 20, 10, 20)
        ));
    }
}
